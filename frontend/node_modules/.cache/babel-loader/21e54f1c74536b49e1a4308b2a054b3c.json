{"ast":null,"code":"import _objectSpread from \"/Users/zhangjunjie/WebstormProjects/eims-react1/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/zhangjunjie/WebstormProjects/eims-react1/src/components/MyTable.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal, Table } from 'antd';\nimport reqwest from 'reqwest';\nimport AddEmployeeForm from './AddEmployeeForm';\n\nclass MyTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getTableData = (params = {}) => {\n      console.log('params:', params);\n      this.setState({\n        loading: true\n      });\n      reqwest({\n        url: MyTable.url,\n        method: 'get',\n        data: _objectSpread({\n          results: 10\n        }, params),\n        type: 'json'\n      }).then(data => {\n        const pagination = _objectSpread({}, this.state.pagination); // Read total count from server\n        // pagination.total = data.totalCount;\n\n\n        pagination.total = data.data.count;\n        this.setState({\n          loading: false,\n          data: data.data.results,\n          pagination\n        });\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.handleTableChange = (pagination, filters, sorter) => {\n      const pager = _objectSpread({}, this.state.pagination);\n\n      pager.current = pagination.current;\n      this.setState({\n        pagination: pager\n      });\n      this.getTableData(_objectSpread({\n        results: pagination.pageSize,\n        page: pagination.current,\n        sortField: sorter.field,\n        sortOrder: sorter.order\n      }, filters));\n    };\n\n    this.onSelectChange = selectedRowKeys => {\n      console.log('selectedRowKeys changed: ', selectedRowKeys);\n      this.setState({\n        selectedRowKeys\n      });\n    };\n\n    this.state = {\n      data: [],\n      pagination: {},\n      loading: false,\n      selectedRowKeys: [],\n      confirmVisible: false,\n      confirmLoading: false\n    }; //this.handleDelete = this.handleDelete.bind(this);\n    //this.showDeleteConfirm = this.showDeleteConfirm.bind(this);\n\n    this.showDeleteConfirmModal = this.showDeleteConfirmModal.bind(this);\n    this.handleDeleteCancel = this.handleDeleteCancel.bind(this);\n    this.handleDeleteOk = this.handleDeleteOk.bind(this);\n  }\n\n  componentDidMount() {\n    this.getTableData();\n  }\n\n  /*handleDelete() {\n      this.setState({\n          deleteLoading: true\n      });\n      const {selectedRowKeys} = this.state;\n      const selectedCount = selectedRowKeys.length;\n      confirm({\n          title: '确定删除这' + selectedCount + '个员工?',\n          //content: selectedRowKeys,\n          okText: '确定',\n          okType: 'danger',\n          cancelText: '取消',\n          onOk() {\n              console.log(\"selectedRowKeys:\" + Array.from(selectedRowKeys));\n              reqwest({\n                  url: MyTable.url,\n                  method: 'delete',\n                  data: {\n                      ids: Array.from(selectedRowKeys)\n                  },\n                  type: 'json',\n                  success: (data) => {\n                      console.log(data);\n                      this.setState({\n                          deleteLoading: false,\n                          data: []\n                      })\n                  },\n                  error: (e) => {\n                      console.log(e);\n                  }\n              });\n          },\n          onCancel() {\n              console.log('Cancel');\n          },\n      });\n  }*/\n  showDeleteConfirmModal() {\n    this.setState({\n      confirmVisible: true\n    });\n  }\n\n  handleDeleteOk() {\n    const selectedRowKeys = this.state.selectedRowKeys;\n    this.setState({\n      confirmLoading: true\n    });\n    reqwest({\n      url: MyTable.url,\n      method: 'delete',\n      data: {\n        ids: Array.from(selectedRowKeys)\n      },\n      type: 'json',\n      success: data => {\n        console.log(data);\n        this.setState({\n          confirmVisible: false,\n          confirmLoading: false,\n          data: []\n        });\n      },\n      error: e => {\n        console.log(e);\n      }\n    });\n  }\n\n  handleDeleteCancel() {\n    this.setState({\n      confirmVisible: false\n    });\n  }\n\n  render() {\n    const columns = [{\n      title: '姓名',\n      dataIndex: 'name',\n      render: name => \"\".concat(name),\n      width: '20%'\n    }, {\n      title: '年龄',\n      dataIndex: 'age',\n      sorter: true,\n      width: '20%'\n    }, {\n      title: '性别',\n      dataIndex: 'gender',\n      filters: [{\n        text: 'Male',\n        value: '0'\n      }, {\n        text: 'Female',\n        value: '1'\n      }],\n      width: '20%'\n    }, {\n      title: '部门',\n      dataIndex: 'department',\n      filters: [{\n        text: '产品部',\n        value: '1'\n      }, {\n        text: '技术部',\n        value: '2'\n      }, {\n        text: '运营部',\n        value: '3'\n      }, {\n        text: '行政部',\n        value: '4'\n      }, {\n        text: '采购部',\n        value: '5'\n      }],\n      width: '20%'\n    }, {\n      title: '职位',\n      dataIndex: 'level',\n      filters: [{\n        text: '普通职员',\n        value: '1'\n      }, {\n        text: '组长',\n        value: '2'\n      }, {\n        text: '经理',\n        value: '3'\n      }, {\n        text: '总监',\n        value: '4'\n      }, {\n        text: '董事长',\n        value: '5'\n      }],\n      width: '20%'\n    }];\n    const _this$state = this.state,\n          deleteLoading = _this$state.deleteLoading,\n          selectedRowKeys = _this$state.selectedRowKeys,\n          confirmVisible = _this$state.confirmVisible,\n          confirmLoading = _this$state.confirmLoading,\n          data = _this$state.data,\n          pagination = _this$state.pagination,\n          loading = _this$state.loading;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange\n    };\n    const hasSelected = selectedRowKeys.length > 0;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginBottom: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showDeleteConfirmModal,\n      disabled: !hasSelected,\n      loading: deleteLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(\"span\", {\n      style: {\n        marginLeft: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, hasSelected ? \"\\u9009\\u62E9 \".concat(selectedRowKeys.length, \" \\u9879\") : ''), React.createElement(Modal, {\n      title: \"\\u786E\\u8BA4\\u5220\\u9664\\uFF1F\",\n      visible: confirmVisible,\n      confirmLoading: confirmLoading,\n      onOk: this.handleDeleteOk,\n      onCancel: this.handleDeleteCancel,\n      okType: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"\\u5220\\u9664\\u540E\\u5C06\\u65E0\\u6CD5\\u6062\\u590D\"))), React.createElement(Table, {\n      rowSelection: rowSelection,\n      bordered: true,\n      columns: columns,\n      rowKey: record => record.id,\n      dataSource: data,\n      pagination: pagination,\n      loading: loading,\n      onChange: this.handleTableChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }));\n  }\n\n}\n\nMyTable.url = 'http://localhost:8888/employee';\nexport default MyTable;","map":{"version":3,"sources":["/Users/zhangjunjie/WebstormProjects/eims-react1/src/components/MyTable.js"],"names":["React","Component","Button","Modal","Table","reqwest","AddEmployeeForm","MyTable","constructor","props","getTableData","params","console","log","setState","loading","url","method","data","results","type","then","pagination","state","total","count","handleTableChange","filters","sorter","pager","current","pageSize","page","sortField","field","sortOrder","order","onSelectChange","selectedRowKeys","confirmVisible","confirmLoading","showDeleteConfirmModal","bind","handleDeleteCancel","handleDeleteOk","componentDidMount","ids","Array","from","success","error","e","render","columns","title","dataIndex","name","width","text","value","deleteLoading","rowSelection","onChange","hasSelected","length","marginBottom","marginLeft","record","id"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Button, Modal, Table} from 'antd';\nimport reqwest from 'reqwest';\nimport AddEmployeeForm from './AddEmployeeForm'\n\nclass MyTable extends Component {\n\n    static url = 'http://localhost:8888/employee';\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            pagination: {},\n            loading: false,\n            selectedRowKeys: [],\n            confirmVisible: false,\n            confirmLoading: false,\n        };\n        //this.handleDelete = this.handleDelete.bind(this);\n        //this.showDeleteConfirm = this.showDeleteConfirm.bind(this);\n        this.showDeleteConfirmModal = this.showDeleteConfirmModal.bind(this);\n        this.handleDeleteCancel = this.handleDeleteCancel.bind(this);\n        this.handleDeleteOk = this.handleDeleteOk.bind(this);\n    };\n\n    componentDidMount() {\n        this.getTableData();\n    }\n\n    getTableData = (params = {}) => {\n        console.log('params:', params);\n        this.setState({loading: true});\n        reqwest({\n            url: MyTable.url,\n            method: 'get',\n            data: {\n                results: 10,\n                ...params,\n            },\n            type: 'json',\n        }).then((data) => {\n            const pagination = {...this.state.pagination};\n            // Read total count from server\n            // pagination.total = data.totalCount;\n            pagination.total = data.data.count;\n            this.setState({\n                loading: false,\n                data: data.data.results,\n                pagination,\n            });\n        });\n        this.setState({\n            loading: false\n        })\n    };\n\n    /*handleDelete() {\n        this.setState({\n            deleteLoading: true\n        });\n        const {selectedRowKeys} = this.state;\n        const selectedCount = selectedRowKeys.length;\n        confirm({\n            title: '确定删除这' + selectedCount + '个员工?',\n            //content: selectedRowKeys,\n            okText: '确定',\n            okType: 'danger',\n            cancelText: '取消',\n            onOk() {\n                console.log(\"selectedRowKeys:\" + Array.from(selectedRowKeys));\n                reqwest({\n                    url: MyTable.url,\n                    method: 'delete',\n                    data: {\n                        ids: Array.from(selectedRowKeys)\n                    },\n                    type: 'json',\n                    success: (data) => {\n                        console.log(data);\n                        this.setState({\n                            deleteLoading: false,\n                            data: []\n                        })\n                    },\n                    error: (e) => {\n                        console.log(e);\n                    }\n                });\n            },\n            onCancel() {\n                console.log('Cancel');\n            },\n        });\n    }*/\n\n    showDeleteConfirmModal() {\n        this.setState({\n            confirmVisible: true,\n        })\n    }\n\n    handleDeleteOk() {\n        const {selectedRowKeys} = this.state;\n        this.setState({\n            confirmLoading: true,\n        });\n        reqwest({\n            url: MyTable.url,\n            method: 'delete',\n            data: {\n                ids: Array.from(selectedRowKeys)\n            },\n            type: 'json',\n            success: (data) => {\n                console.log(data);\n                this.setState({\n                    confirmVisible: false,\n                    confirmLoading: false,\n                    data: []\n                })\n            },\n            error: (e) => {\n                console.log(e);\n            }\n        });\n    };\n\n    handleDeleteCancel() {\n        this.setState({\n            confirmVisible: false,\n        })\n    }\n\n    handleTableChange = (pagination, filters, sorter) => {\n        const pager = {...this.state.pagination};\n        pager.current = pagination.current;\n        this.setState({\n            pagination: pager,\n        });\n        this.getTableData({\n            results: pagination.pageSize,\n            page: pagination.current,\n            sortField: sorter.field,\n            sortOrder: sorter.order,\n            ...filters,\n        });\n    };\n\n    onSelectChange = (selectedRowKeys) => {\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\n        this.setState({selectedRowKeys});\n    };\n\n    render() {\n        const columns = [{\n            title: '姓名',\n            dataIndex: 'name',\n            render: name => `${name}`,\n            width: '20%',\n        }, {\n            title: '年龄',\n            dataIndex: 'age',\n            sorter: true,\n            width: '20%'\n        }, {\n            title: '性别',\n            dataIndex: 'gender',\n            filters: [\n                {text: 'Male', value: '0'},\n                {text: 'Female', value: '1'},\n            ],\n            width: '20%',\n        }, {\n            title: '部门',\n            dataIndex: 'department',\n            filters: [\n                {text: '产品部', value: '1'},\n                {text: '技术部', value: '2'},\n                {text: '运营部', value: '3'},\n                {text: '行政部', value: '4'},\n                {text: '采购部', value: '5'},\n            ],\n            width: '20%',\n        }, {\n            title: '职位',\n            dataIndex: 'level',\n            filters: [\n                {text: '普通职员', value: '1'},\n                {text: '组长', value: '2'},\n                {text: '经理', value: '3'},\n                {text: '总监', value: '4'},\n                {text: '董事长', value: '5'},\n            ],\n            width: '20%',\n        },];\n\n        const {\n            deleteLoading,\n            selectedRowKeys,\n            confirmVisible,\n            confirmLoading,\n            data,\n            pagination,\n            loading\n        } = this.state;\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n\n\n        return (\n            <div>\n                <div style={{marginBottom: 16}}>\n                    <Button\n                        type=\"primary\"\n                        onClick={this.showDeleteConfirmModal}\n                        disabled={!hasSelected}\n                        loading={deleteLoading}\n                    >\n                        Delete\n                    </Button>\n                    <span style={{marginLeft: 8}}>\n                        {hasSelected ? `选择 ${selectedRowKeys.length} 项` : ''}\n                    </span>\n                    <Modal\n                        title=\"确认删除？\"\n                        visible={confirmVisible}\n                        confirmLoading={confirmLoading}\n                        onOk={this.handleDeleteOk}\n                        onCancel={this.handleDeleteCancel}\n                        okType=\"danger\"\n                    >\n                        <p>删除后将无法恢复</p>\n                    </Modal>\n                </div>\n                <Table\n                    rowSelection={rowSelection}\n                    bordered={true}\n                    columns={columns}\n                    rowKey={record => record.id}\n                    dataSource={data}\n                    pagination={pagination}\n                    loading={loading}\n                    onChange={this.handleTableChange}\n                />\n            </div>\n\n        )\n    };\n}\n\nexport default MyTable;"]},"metadata":{},"sourceType":"module"}