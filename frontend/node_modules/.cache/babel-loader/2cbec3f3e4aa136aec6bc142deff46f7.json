{"ast":null,"code":"var _jsxFileName = \"/Users/zhangjunjie/WebstormProjects/eims-react1/src/components/DrawerForm.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Drawer, Form, Button, Col, Row, Input, Select, DatePicker, Icon } from 'antd';\nimport reqwest from 'reqwest';\nconst Option = Select.Option;\n\nclass DrawerForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showDrawer = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.onClose = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.state = {\n      visible: false,\n      name: '',\n      gender: '',\n      birthday: '',\n      department: '',\n      level: ''\n    };\n  }\n\n  handleChangeGender(value) {\n    this.setState({\n      gender: value\n    });\n    console.log(this.state.gender);\n  }\n\n  handleChangeDepartment(value) {\n    this.setState({\n      department: value\n    });\n    console.log(this.state.department);\n  }\n\n  handleChangeLevel(value) {\n    this.setState({\n      level: value\n    });\n    console.log(this.state.level);\n  }\n\n  handleChangeBirthday(value) {\n    this.setState({\n      birthday: value\n    });\n    console.log(this.state.birthday);\n  }\n\n  handleChangeName(value) {\n    this.setState({\n      name: value\n    });\n    console.log(this.state.name);\n  }\n  /*handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n          if (!err) {\n              console.log('Received values of form: ', values);\n          }\n      });\n  };*/\n\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showDrawer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), \" New account\"), React.createElement(Drawer, {\n      title: \"\\u6DFB\\u52A0\\u5458\\u5DE5\",\n      width: 300,\n      onClose: this.onClose,\n      visible: this.state.visible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"E-mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, getFieldDecorator('email', {\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Please input your E-mail!'\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }))), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Register\")))));\n  }\n\n}\n\nexport default Form.create()(DrawerForm);","map":{"version":3,"sources":["/Users/zhangjunjie/WebstormProjects/eims-react1/src/components/DrawerForm.js"],"names":["React","Drawer","Form","Button","Col","Row","Input","Select","DatePicker","Icon","reqwest","Option","DrawerForm","Component","constructor","props","showDrawer","setState","visible","onClose","state","name","gender","birthday","department","level","handleChangeGender","value","console","log","handleChangeDepartment","handleChangeLevel","handleChangeBirthday","handleChangeName","render","getFieldDecorator","form","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","rules","type","message","required","create"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'antd/dist/antd.css';\nimport {\n    Drawer, Form, Button, Col, Row, Input, Select, DatePicker, Icon,\n} from 'antd';\nimport reqwest from 'reqwest';\n\n\nconst {Option} = Select;\n\nclass DrawerForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            name: '',\n            gender: '',\n            birthday: '',\n            department: '',\n            level: ''\n        };\n    }\n\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleChangeGender(value) {\n        this.setState({\n            gender: value,\n        });\n        console.log(this.state.gender)\n    }\n\n    handleChangeDepartment(value) {\n        this.setState({\n            department: value,\n        });\n        console.log(this.state.department)\n    }\n\n    handleChangeLevel(value) {\n        this.setState({\n            level: value,\n        });\n        console.log(this.state.level)\n    }\n\n    handleChangeBirthday(value) {\n        this.setState({\n            birthday: value,\n        });\n        console.log(this.state.birthday)\n    }\n\n    handleChangeName(value) {\n        this.setState({\n            name: value,\n        });\n        console.log(this.state.name)\n    }\n\n    /*handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };*/\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        const formItemLayout = {\n            labelCol: {\n                xs: {span: 24},\n                sm: {span: 8},\n            },\n            wrapperCol: {\n                xs: {span: 24},\n                sm: {span: 16},\n            },\n        };\n        const tailFormItemLayout = {\n            wrapperCol: {\n                xs: {\n                    span: 24,\n                    offset: 0,\n                },\n                sm: {\n                    span: 16,\n                    offset: 8,\n                },\n            },\n        };\n        return (\n            <div>\n                <Button type=\"primary\" onClick={this.showDrawer}>\n                    <Icon type=\"plus\"/> New account\n                </Button>\n                <Drawer\n                    title=\"添加员工\"\n                    width={300}\n                    onClose={this.onClose}\n                    visible={this.state.visible}\n                >\n                    {/*<Form layout=\"vertical\" hideRequiredMark>\n                        <Form.Item gutter={16}>\n                            <Col span={20}>\n                                <Form.Item label=\"姓名\">\n                                    {getFieldDecorator('email', {\n                                        rules: [{\n                                            type: 'name', message: 'The input is not valid E-mail!',\n                                        }, {\n                                            required: true, message: 'Please input your E-mail!',\n                                        }],\n                                    })(\n                                        <Input onChange={this.handleChangeName.bind(this)} placeholder=\"请输入姓名\"/>\n                                    )}\n                                </Form.Item>\n                            </Col>\n                        </Form.Item>\n                        <Row gutter={16}>\n                            <Col span={12}>\n                                <Form.Item label=\"性别\">\n                                    <Select placeholder=\"请选择性别\" onSelect={this.handleChangeGender.bind(this)}>\n                                        <Option value=\"0\">男</Option>\n                                        <Option value=\"1\">女</Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                        <Row gutter={16}>\n                            <Col span={20}>\n                                <Form.Item label=\"出生日期\">\n                                    <DatePicker onChange={this.handleChangeBirthday.bind(this)} placeholder=\"请选择生日\"/>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                        <Row gutter={16}>\n                            <Col span={12}>\n                                <Form.Item label=\"部门\">\n                                    <Select placeholder=\"请选择部门\" onChange={this.handleChangeDepartment.bind(this)}>\n                                        <Option value=\"1\">产品部</Option>\n                                        <Option value=\"2\">技术部</Option>\n                                        <Option value=\"3\">行政部</Option>\n                                        <Option value=\"4\">运营部</Option>\n                                        <Option value=\"5\">采购部</Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                        <Row gutter={16}>\n                            <Col span={12}>\n                                <Form.Item label=\"职位\">\n                                    <Select placeholder=\"请选择职位\" onChange={this.handleChangeLevel.bind(this)}>\n                                        <Option value=\"1\">普通职员</Option>\n                                        <Option value=\"2\">组长</Option>\n                                        <Option value=\"3\">经理</Option>\n                                        <Option value=\"4\">总监</Option>\n                                        <Option value=\"5\">董事长</Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            left: 0,\n                            bottom: 0,\n                            width: '100%',\n                            borderTop: '1px solid #e9e9e9',\n                            padding: '10px 16px',\n                            background: '#fff',\n                            textAlign: 'right',\n                        }}\n                    >\n                        <Button onClick={this.onClose} style={{marginRight: 8}}>\n                            取消\n                        </Button>\n                        <Button onClick={this.onClose} type=\"primary\">\n                            确定\n                        </Button>\n                    </div>*/}\n\n                    <Form {...formItemLayout} >\n                        <Form.Item\n                            label=\"E-mail\"\n                        >\n                            {getFieldDecorator('email', {\n                                rules: [{\n                                    type: 'email', message: 'The input is not valid E-mail!',\n                                }, {\n                                    required: true, message: 'Please input your E-mail!',\n                                }],\n                            })(\n                                <Input/>\n                            )}\n                        </Form.Item>\n                        <Form.Item {...tailFormItemLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">Register</Button>\n                        </Form.Item>\n                    </Form>\n                </Drawer>\n            </div>\n        );\n    }\n}\n\nexport default Form.create()(DrawerForm);"]},"metadata":{},"sourceType":"module"}