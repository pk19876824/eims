{"ast":null,"code":"import _objectSpread from \"/Users/zhangjunjie/WebstormProjects/eims-react1/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/zhangjunjie/WebstormProjects/eims-react1/src/components/MyTable.js\";\nimport React, { Component } from 'react';\nimport { Button, Icon, Input, Table } from 'antd';\nimport reqwest from 'reqwest';\nconst columns = [{\n  title: '姓名',\n  dataIndex: 'name',\n  render: name => \"\".concat(name),\n  width: '20%'\n}, {\n  title: '年龄',\n  dataIndex: 'age',\n  sorter: true,\n  width: '15%'\n}, {\n  title: '性别',\n  dataIndex: 'gender',\n  filters: [{\n    text: 'Male',\n    value: '0'\n  }, {\n    text: 'Female',\n    value: '1'\n  }],\n  width: '15%'\n}, {\n  title: '部门',\n  dataIndex: 'department',\n  filters: [{\n    text: '产品部',\n    value: '1'\n  }, {\n    text: '技术部',\n    value: '2'\n  }, {\n    text: '运营部',\n    value: '3'\n  }, {\n    text: '行政部',\n    value: '4'\n  }, {\n    text: '采购部',\n    value: '5'\n  }],\n  width: '20%'\n}, {\n  title: '职位',\n  dataIndex: 'level',\n  filters: [{\n    text: '普通职员',\n    value: '1'\n  }, {\n    text: '组长',\n    value: '2'\n  }, {\n    text: '经理',\n    value: '3'\n  }, {\n    text: '总监',\n    value: '4'\n  }, {\n    text: '董事长',\n    value: '5'\n  }],\n  width: '20%'\n}, {\n  title: 'Action',\n  dataIndex: '',\n  render: key => React.createElement(\"a\", {\n    onClick: this.handleDelete(key.bind(this)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Delete\"),\n  width: '10%'\n}];\n\nclass MyTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetch = (params = {}) => {\n      console.log('params:', params);\n      this.setState({\n        loading: true\n      });\n      reqwest({\n        url: MyTable.searchUrl,\n        method: 'get',\n        data: _objectSpread({\n          results: 10\n        }, params),\n        type: 'json'\n      }).then(data => {\n        const pagination = _objectSpread({}, this.state.pagination); // Read total count from server\n        // pagination.total = data.totalCount;\n\n\n        pagination.total = data.data.count;\n        this.setState({\n          loading: false,\n          data: data.data.results,\n          pagination\n        });\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.handleTableChange = (pagination, filters, sorter) => {\n      const pager = _objectSpread({}, this.state.pagination);\n\n      pager.current = pagination.current;\n      this.setState({\n        pagination: pager\n      });\n      this.fetch(_objectSpread({\n        results: pagination.pageSize,\n        page: pagination.current,\n        sortField: sorter.field,\n        sortOrder: sorter.order\n      }, filters));\n    };\n\n    this.state = {\n      data: [],\n      pagination: {},\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.fetch();\n  }\n\n  handleDelete(key) {\n    console.log(key);\n  }\n\n  render() {\n    return React.createElement(Table, {\n      bordered: \"true\",\n      columns: columns,\n      rowKey: record => record.id,\n      dataSource: this.state.data,\n      pagination: this.state.pagination,\n      loading: this.state.loading,\n      onChange: this.handleTableChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    });\n  }\n\n}\n\nMyTable.searchUrl = 'http://localhost:8888/employee';\nexport default MyTable;","map":{"version":3,"sources":["/Users/zhangjunjie/WebstormProjects/eims-react1/src/components/MyTable.js"],"names":["React","Component","Button","Icon","Input","Table","reqwest","columns","title","dataIndex","render","name","width","sorter","filters","text","value","key","handleDelete","bind","MyTable","constructor","props","fetch","params","console","log","setState","loading","url","searchUrl","method","data","results","type","then","pagination","state","total","count","handleTableChange","pager","current","pageSize","page","sortField","field","sortOrder","order","componentDidMount","record","id"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Button, Icon, Input, Table} from 'antd';\nimport reqwest from 'reqwest';\n\nconst columns = [{\n    title: '姓名',\n    dataIndex: 'name',\n    render: name => `${name}`,\n    width: '20%',\n}, {\n    title: '年龄',\n    dataIndex: 'age',\n    sorter: true,\n    width: '15%'\n}, {\n    title: '性别',\n    dataIndex: 'gender',\n    filters: [\n        {text: 'Male', value: '0'},\n        {text: 'Female', value: '1'},\n    ],\n    width: '15%',\n}, {\n    title: '部门',\n    dataIndex: 'department',\n    filters: [\n        {text: '产品部', value: '1'},\n        {text: '技术部', value: '2'},\n        {text: '运营部', value: '3'},\n        {text: '行政部', value: '4'},\n        {text: '采购部', value: '5'},\n    ],\n    width: '20%',\n}, {\n    title: '职位',\n    dataIndex: 'level',\n    filters: [\n        {text: '普通职员', value: '1'},\n        {text: '组长', value: '2'},\n        {text: '经理', value: '3'},\n        {text: '总监', value: '4'},\n        {text: '董事长', value: '5'},\n    ],\n    width: '20%',\n}, {\n    title: 'Action',\n    dataIndex: '',\n    render: (key) => <a onClick={this.handleDelete(key.bind(this))}>Delete</a>,\n    width: '10%',\n},];\n\nclass MyTable extends Component {\n\n    static searchUrl = 'http://localhost:8888/employee';\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            pagination: {},\n            loading: false,\n        };\n    };\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    fetch = (params = {}) => {\n        console.log('params:', params);\n        this.setState({loading: true});\n        reqwest({\n            url: MyTable.searchUrl,\n            method: 'get',\n            data: {\n                results: 10,\n                ...params,\n            },\n            type: 'json',\n        }).then((data) => {\n            const pagination = {...this.state.pagination};\n            // Read total count from server\n            // pagination.total = data.totalCount;\n            pagination.total = data.data.count;\n            this.setState({\n                loading: false,\n                data: data.data.results,\n                pagination,\n            });\n        });\n        this.setState({\n            loading: false\n        })\n    };\n\n    handleDelete(key) {\n        console.log(key);\n    }\n\n    handleTableChange = (pagination, filters, sorter) => {\n        const pager = {...this.state.pagination};\n        pager.current = pagination.current;\n        this.setState({\n            pagination: pager,\n        });\n        this.fetch({\n            results: pagination.pageSize,\n            page: pagination.current,\n            sortField: sorter.field,\n            sortOrder: sorter.order,\n            ...filters,\n        });\n    };\n\n    render() {\n        return (\n            <Table\n                bordered='true'\n                columns={columns}\n                rowKey={record => record.id}\n                dataSource={this.state.data}\n                pagination={this.state.pagination}\n                loading={this.state.loading}\n                onChange={this.handleTableChange}\n            />\n        )\n    };\n}\n\nexport default MyTable;"]},"metadata":{},"sourceType":"module"}