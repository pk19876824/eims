{"ast":null,"code":"var _jsxFileName = \"/Users/zhangjunjie/WebstormProjects/eims-react1/src/components/RegistrationForm.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Form, Input, Drawer, Icon, Select, DatePicker, Col, Checkbox, Button, AutoComplete } from 'antd';\nconst Option = Select.Option;\n\nclass RegistrationForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      visible: false\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    this.showDrawer = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.onClose = () => {\n      this.setState({\n        visible: false\n      });\n    };\n  }\n\n  handleChangeGender(value) {\n    this.setState({\n      gender: value\n    });\n    console.log(this.state.gender);\n  }\n\n  handleChangeDepartment(value) {\n    this.setState({\n      department: value\n    });\n    console.log(this.state.department);\n  }\n\n  handleChangeLevel(value) {\n    this.setState({\n      level: value\n    });\n    console.log(this.state.level);\n  }\n\n  handleChangeBirthday(value) {\n    this.setState({\n      birthday: value\n    });\n    console.log(this.state.birthday);\n  }\n\n  handleChangeName(value) {\n    this.setState({\n      name: value\n    });\n    console.log(this.state.name);\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showDrawer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), \"\\u6DFB\\u52A0\\u5458\\u5DE5\"), React.createElement(Drawer, {\n      title: \"\\u6DFB\\u52A0\\u5458\\u5DE5\",\n      width: 300,\n      onClose: this.onClose,\n      visible: this.state.visible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"E-mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, getFieldDecorator('email', {\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Please input your E-mail!'\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"\\u59D3\\u540D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, getFieldDecorator('name', {\n      rules: [{\n        required: true,\n        message: 'Please input your name!'\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"\\u6DFB\\u52A0\")))));\n  }\n\n}\n\nconst WrappedRegistrationForm = Form.create({\n  name: 'register'\n})(RegistrationForm);\nexport default WrappedRegistrationForm;","map":{"version":3,"sources":["/Users/zhangjunjie/WebstormProjects/eims-react1/src/components/RegistrationForm.js"],"names":["React","Form","Input","Drawer","Icon","Select","DatePicker","Col","Checkbox","Button","AutoComplete","Option","RegistrationForm","Component","state","visible","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","console","log","showDrawer","setState","onClose","handleChangeGender","value","gender","handleChangeDepartment","department","handleChangeLevel","level","handleChangeBirthday","birthday","handleChangeName","name","render","getFieldDecorator","rules","type","message","required","WrappedRegistrationForm","create"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'antd/dist/antd.css';\nimport {\n    Form, Input, Drawer, Icon, Select, DatePicker, Col, Checkbox, Button, AutoComplete,\n} from 'antd';\n\nconst {Option} = Select;\n\nclass RegistrationForm extends React.Component {\n    state = {\n        visible: false,\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    handleChangeGender(value) {\n        this.setState({\n            gender: value,\n        });\n        console.log(this.state.gender)\n    }\n\n    handleChangeDepartment(value) {\n        this.setState({\n            department: value,\n        });\n        console.log(this.state.department)\n    }\n\n    handleChangeLevel(value) {\n        this.setState({\n            level: value,\n        });\n        console.log(this.state.level)\n    }\n\n    handleChangeBirthday(value) {\n        this.setState({\n            birthday: value,\n        });\n        console.log(this.state.birthday)\n    }\n\n    handleChangeName(value) {\n        this.setState({\n            name: value,\n        });\n        console.log(this.state.name)\n    }\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n\n        return (\n            <div>\n                <Button type=\"primary\" onClick={this.showDrawer}>\n                    <Icon type=\"plus\"/>添加员工\n                </Button>\n                <Drawer\n                    title=\"添加员工\"\n                    width={300}\n                    onClose={this.onClose}\n                    visible={this.state.visible}\n                >\n                    <Form onSubmit={this.handleSubmit}>\n                        <Form.Item\n                            label=\"E-mail\"\n                        >\n                            {getFieldDecorator('email', {\n                                rules: [{\n                                    type: 'email', message: 'The input is not valid E-mail!',\n                                }, {\n                                    required: true, message: 'Please input your E-mail!',\n                                }],\n                            })(\n                                <Input/>\n                            )}\n                        </Form.Item>\n                        <Form.Item\n                            label=\"姓名\"\n                        >\n                            {getFieldDecorator('name', {\n                                rules: [{\n                                    required: true, message: 'Please input your name!',\n                                }],\n                            })(\n                                <Input/>\n                            )}\n                        </Form.Item>\n                        {/*<Form.Item label=\"性别\">\n                            {getFieldDecorator('gender', {\n                                rules: [{\n                                    type: 'gender', message: 'The input is not valid gender!',\n                                }, {\n                                    required: true, message: 'Please select your gender!',\n                                }],\n                            })(\n                                <Select placeholder=\"请选择性别\" onSelect={this.handleChangeGender.bind(this)}>\n                                    <Option value=\"0\">男</Option>\n                                    <Option value=\"1\">女</Option>\n                                </Select>\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"出生日期\">\n                            {getFieldDecorator('birthday', {\n                                rules: [{\n                                    type: 'birthday', message: 'The input is not valid gender!',\n                                }, {\n                                    required: true, message: 'Please select your gender!',\n                                }],\n                            })(\n                                <DatePicker onChange={this.handleChangeBirthday.bind(this)} placeholder=\"请选择生日\"/>\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"部门\">\n                            {getFieldDecorator('department', {\n                                rules: [{\n                                    type: 'department', message: 'The input is not valid gender!',\n                                }, {\n                                    required: true, message: 'Please select your gender!',\n                                }],\n                            })(\n                                <Select placeholder=\"请选择部门\" onChange={this.handleChangeDepartment.bind(this)}>\n                                    <Option value=\"1\">产品部</Option>\n                                    <Option value=\"2\">技术部</Option>\n                                    <Option value=\"3\">行政部</Option>\n                                    <Option value=\"4\">运营部</Option>\n                                    <Option value=\"5\">采购部</Option>\n                                </Select>\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"职位\">\n                            {getFieldDecorator('level', {\n                                rules: [{\n                                    type: 'level', message: 'The input is not valid gender!',\n                                }, {\n                                    required: true, message: 'Please select your gender!',\n                                }],\n                            })(\n                                <Select placeholder=\"请选择职位\" onChange={this.handleChangeLevel.bind(this)}>\n                                    <Option value=\"1\">普通职员</Option>\n                                    <Option value=\"2\">组长</Option>\n                                    <Option value=\"3\">经理</Option>\n                                    <Option value=\"4\">总监</Option>\n                                    <Option value=\"5\">董事长</Option>\n                                </Select>\n                            )}\n                        </Form.Item>*/}\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">添加</Button>\n                        </Form.Item>\n                    </Form>\n                </Drawer>\n            </div>\n        );\n    }\n}\n\nconst WrappedRegistrationForm = Form.create({name: 'register'})(RegistrationForm);\n\nexport default WrappedRegistrationForm;"]},"metadata":{},"sourceType":"module"}